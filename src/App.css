.outerContainer {
  height: 100dvh;
  align-items: center;
  display: flex;
  justify-content: center;
  flex-direction: column;
}

.Topcontainer {
  background-color: beige;
  height: 70vh; /* Use viewport height */
  width: 80vh; /* Use viewport height for width to keep it square */
  display: grid;
  overflow: hidden;
  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: repeat(5, 1fr);
  gap: 1px;
  padding: 20px;
  box-sizing: border-box; /* Include padding in width/height */
}

/* Optional: Adjust for smaller screens if needed */
@media screen and (max-width: 768px) {
  .Topcontainer {
    width: 90vw; /* Use viewport width on smaller screens */
    height: 90vw; /* Keep it square based on width */
    padding: 10px;
  }
}

.boxes {
  border: 1.5px solid black;
  display: flex; /* Use flexbox to center inner content */
  align-items: center;
  justify-content: center;
  /* Removed box-shadow: 10px black; - check syntax, likely meant box-shadow: 0 0 10px black; */

  /* --- Add CSS for the flip animation --- */
  position: relative; /* Needed for absolute positioning of inner/sides */
  perspective: 1000px; /* Creates the 3D perspective */
  transform-style: preserve-3d; /* Children exist in 3D space */
  cursor: pointer; /* Moved from :hover */
}

.boxes:hover {
  /* Optional hover effects like slight scale or lift */
  transform: scale(1.03);
  transition: transform 0.2s ease-in-out;
}

/* Add class to indicate game over state */
.boxes.game-over {
  pointer-events: none; /* Prevent clicks when game is over */
  /* Optional: Add specific styling for game over boxes */
  /* opacity: 0.8; */
}

/* Inner container that does the actual flip */
.box-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s; /* Animation duration */
  transform-style: preserve-3d; /* Children should preserve 3D position */
}

/* State when the box is revealed */
.boxes.revealed .box-inner {
  transform: rotateY(180deg); /* Flip horizontally */
}

/* Front and back sides of the box */
.box-front,
.box-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Hide the back of the element when it's facing away */
  backface-visibility: hidden; /* Standard property */
  display: flex; /* Center content on the sides */
  align-items: center;
  justify-content: center;
}

/* Style the front side (un-revealed) */
.box-front {
  background-color: lightgray; /* Example background for hidden state */
  color: black;
  transform: rotateY(0deg); /* Initially facing the user */
}

/* Style the back side (revealed) */
.box-back {
  background-color: lightblue; /* Example background for revealed state */
  color: black;
  transform: rotateY(180deg); /* Initially rotated away */
}

/* Specific styling for the revealed mine boxes (0) */
.boxes.revealed .box-back img[alt="Bomb"] {
  /* Add specific styles if needed for the bomb side */
  /* background-color: red; */
}

/* Specific styling for the revealed diamond boxes (1) */
.boxes.revealed .box-back img[alt="Diamond"] {
  /* Add specific styles if needed for the diamond side */
  /* background-color: yellow; */
}

.bottomContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  gap: 10px;
  margin-top: 20px; /* Add some space below the grid */
}

/* Style for the game over message */
.game-over-message {
  margin-top: 20px;
  font-size: 1.5em;
  color: red;
  text-align: center;
}
